var fs = require('fs');
var path = require('path');
var outputFolderName = 'output_folder';

/**
 * Look ma, it's cp -R.
 * @param {string} src  The path to the thing to copy.
 * @param {string} dest The path to the new copy.
 */
 var copyRecursiveSync = function(src, dest) {
	var exists = fs.existsSync(src);
	var stats = exists && fs.statSync(src);
	var isDirectory = exists && stats.isDirectory();
	if (isDirectory) {
	  fs.mkdirSync(dest);
	  fs.readdirSync(src).forEach(function(childItemName) {
		copyRecursiveSync(path.join(src, childItemName),
						  path.join(dest, childItemName));
	  });
	} else {
	  fs.copyFileSync(src, dest);
	}
  };

  function copy(src,dest) {
      // remove target folder before
        if (fs.existsSync(dest)) {
            fs.rmSync(dest,{recursive: true});
        }

        copyRecursiveSync(src,dest)

    fs.writeFileSync(path.join(dest, "readme.md"), '# Auto generated folder \nOpen `index.html` to see the documentation. ' +
    'Do not edit this folder,\nDocs is generated by `starsky-tools/docs` ');
    fs.writeFileSync(path.join(dest, "__do_NOT_edit_this_folder__"), 'Open `index.html` to see the documentation. Do not edit this folder,' +
    '\nDocs is generated by starsky-tools/docs');
  }


// Target folder will be removed first :!
var myArgs = process.argv.slice(2);

if (myArgs && myArgs.length === 1 && fs.lstatSync( path.dirname(myArgs[0]) ).isDirectory() ) {
  // use the parent folder as arg
  copy(path.join(__dirname, outputFolderName), myArgs[0]);
}
else {
    console.log(path.join("../","../","docs"));
  copy(path.join(__dirname, outputFolderName), path.join("../","../","docs"));
  console.log("has run default option: ignore args: enter the full parent folder as arg");
}

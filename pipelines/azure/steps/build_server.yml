steps:

  - task: DotNetCoreCLI@2
    displayName: '[Cake] dotnet tool restore'
    inputs:
      command: custom
      custom: tool
      arguments: 'restore --tool-manifest starsky/.config/dotnet-tools.json'
      
  - task: Cache@2
    inputs:
      key: 'nuget | "$(Agent.OS)" | $(Build.SourcesDirectory)\starsky\nuget-packages-list.json'
      restoreKeys: |
        nuget | "$(Agent.OS)"
      path: $(NUGET_PACKAGES)
    displayName: Cache NuGet packages

  - task: PowerShell@2
    displayName: 'Cake SonarBuildTest'
    env:
      BUILD_SOURCEBRANCH: $(Build.SourceBranch)
    inputs:
      filePath: 'starsky\build.ps1'
      arguments: '-runtime="linux-arm,linux-arm64" -target="SonarBuildTest" -branch="$(Build.SourceBranch)"'
      pwsh: true
      workingDirectory: '$(Build.SourcesDirectory)\starsky\'

  - task: PowerShell@2
    displayName: 'Cake BuildNetCoreRuntimeSpecific'
    inputs:
      filePath: 'starsky\build.ps1'
      arguments: '-runtime="linux-arm,linux-arm64" -target="BuildNetCoreRuntimeSpecific"'
      pwsh: true
      workingDirectory: '$(Build.SourcesDirectory)\starsky\'

  - task: PowerShell@2
    displayName: 'Cake PublishWeb'
    inputs:
      filePath: 'starsky\build.ps1'
      arguments: '-runtime="linux-arm,linux-arm64" -target="PublishWeb"'
      pwsh: true
      workingDirectory: '$(Build.SourcesDirectory)\starsky\'

  - task: PowerShell@2
    displayName: 'Cake CoverageDocs'
    inputs:
      filePath: 'starsky\build.ps1'
      arguments: '-runtime="linux-arm,linux-arm64" -target="CoverageDocs"'
      pwsh: true
      workingDirectory: '$(Build.SourcesDirectory)\starsky\'

  - task: PowerShell@2
    displayName: 'Cake Zip'
    inputs:
      filePath: 'starsky\build.ps1'
      arguments: '-runtime="linux-arm,linux-arm64" -target="Zip"'
      pwsh: true
      workingDirectory: '$(Build.SourcesDirectory)\starsky\'
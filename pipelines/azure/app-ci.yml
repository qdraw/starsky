variables:
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  NUGET_XMLDOC_MODE: skip
  CI: true

trigger:
  branches:
    include:
    - master
    - release/*
    exclude:
    - feature/*
  paths:
      include:
      - starskyapp/*
      exclude:
      - starsky/*
      - starsky-tools/*
      - starsky.netframework/*
      - /*.md
      - starskyapp/*.md
      - starskyapp/readme.md

# specific path build
pr:
  branches:
    exclude:
    - master
  paths:
    include:
    - starskyapp/*
    exclude:
    - starsky/*
    - starsky-tools/*
    - starsky.netframework/*

stages:
- stage: buildnetcore
  displayName: 'Build .NET Core'
  jobs:
  - job: buildnetcore
    displayName: 'Build .NET Core'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - template: /pipelines/azure/steps/use_dotnet_version.yml

    - template: /pipelines/azure/steps/build_server.yml
      parameters:
        vstest: false
        runtimeArg: '-runtime="win7-x64,win7-x86,osx.10.12-x64"'

    - template: /pipelines/azure/steps/build_clientapp.yml
      parameters:
        jest: false
        runtimeArg: '-runtime="win7-x64,win7-x86,osx.10.12-x64"'

    - template: /pipelines/azure/steps/build_zip_bundle.yml
      parameters:
        runtimeArg: '-runtime="win7-x64,win7-x86,osx.10.12-x64"'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: win7-x86'
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)/starsky/starsky-win7-x86.zip'
        ArtifactName: 'win7-x86'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: win7-x64'
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)/starsky/starsky-win7-x64.zip'
        ArtifactName: 'win7-x64'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: osx.10.12-x64'
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)/starsky/starsky-osx.10.12-x64.zip'
        ArtifactName: 'osx.10.12-x64'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: generic-netcore'
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)/starsky/starsky-generic-netcore.zip'
        ArtifactName: 'generic-netcore'


- stage: buildelectron
  displayName: 'Build Electron'
  jobs:
  - job: build
    displayName: 'Build Electron'
    pool:
      vmImage: 'ubuntu-latest'
    container: electronuserland/builder:wine
    steps:
    - task: DownloadBuildArtifacts@0
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'win7-x64'
        downloadPath: '$(Build.SourcesDirectory)'

    - task: DownloadBuildArtifacts@0
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'osx.10.12-x64'
        downloadPath: '$(Build.SourcesDirectory)'

    - task: Bash@3
      enabled: true
      displayName: 'For Mac, move to expected location'
      inputs:
        targetType: 'inline'
        script: |
          mv $(Build.SourcesDirectory)/osx.10.12-x64/starsky-osx.10.12-x64.zip $(Build.SourcesDirectory)/starsky/starsky-osx.10.12-x64.zip

    - task: Bash@3
      enabled: true
      displayName: 'For Windows, move to expected location'
      inputs:
        targetType: 'inline'
        script: |
          mv $(Build.SourcesDirectory)/win7-x64/starsky-win7-x64.zip $(Build.SourcesDirectory)/starsky/starsky-win7-x64.zip

    - task: Bash@3
      enabled: true
      displayName: 'Unzip for mac'
      inputs:
        targetType: 'inline'
        script: |
          unzip $(Build.SourcesDirectory)/starsky/starsky-osx.10.12-x64.zip -d $(Build.SourcesDirectory)/starsky/osx.10.12-x64

    - task: Bash@3
      enabled: true
      displayName: 'Restore permissions mac'
      inputs:
        targetType: 'inline'
        script: |
          chmod 777 $(Build.SourcesDirectory)/starsky/osx.10.12-x64/pm2-restore-x-rights.sh
          bash $(Build.SourcesDirectory)/starsky/osx.10.12-x64/pm2-restore-x-rights.sh

    - task: Bash@3
      enabled: true
      displayName: 'Unzip for windows'
      inputs:
        targetType: 'inline'
        script: |
          unzip $(Build.SourcesDirectory)/starsky/starsky-win7-x64.zip -d $(Build.SourcesDirectory)/starsky/win7-x64
    
    - task: Bash@3
      enabled: true
      displayName: 'Restore permissions windows'
      inputs:
        targetType: 'inline'
        script: |
          chmod 777 $(Build.SourcesDirectory)/starsky/win7-x64/pm2-restore-x-rights.sh
          bash $(Build.SourcesDirectory)/starsky/win7-x64/pm2-restore-x-rights.sh

    - task: Npm@1
      displayName: 'Electron npm ci'
      enabled: true
      inputs:
        command: 'ci'
        workingDir: '$(Build.SourcesDirectory)/starskyapp'

    - task: Npm@1
      displayName: 'Electron run macwindows'
      inputs:
        command: 'custom'
        workingDir: '$(Build.SourcesDirectory)/starskyapp'
        customCommand: 'run macwindows'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: starsky-win-desktop'
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)/starskyapp/dist/starsky-win-desktop.zip'
        ArtifactName: 'starsky-win-desktop'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: starsky-mac-desktop'
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)/starskyapp/dist/starsky-mac-desktop.zip'
        ArtifactName: 'starsky-mac-desktop'

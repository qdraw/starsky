variables:
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  NUGET_XMLDOC_MODE: skip
  CI: true
  npm_config_cache: $(Pipeline.Workspace)/.npm
  NUGET_PACKAGES: $(Pipeline.Workspace)/.nuget/packages

trigger:
  branches:
    include:
    - master
    - release/*
    exclude:
    - feature/*
  paths:
      include:
      - starskydesktop/*
      exclude:
      - starsky/*
      - starsky-tools/*
      - starsky.netframework/*
      - /*.md
      - starskydesktop/*.md
      - starskydesktop/readme.md

# specific path build
pr:
  branches:
    exclude:
    - master
  paths:
    include:
    - starskydesktop/*
    exclude:
    - starsky/*
    - starsky-tools/*
    - starsky.netframework/*

stages:
- stage: buildnetcore
  displayName: 'Build .NET Core'
  jobs:
  - job: buildnetcore
    displayName: 'Build .NET Core'
    pool:
      vmImage: 'ubuntu-22.04'

    steps:
    - checkout: self
      clean: true
      fetchDepth: 1

    - template: /pipelines/azure/steps/use_dotnet_version.yml

    - template: /pipelines/azure/steps/build_clientapp.yml
      parameters:
        jest: false
        runtimeArg: '--runtime="win-x64,linux-x64,osx-x64,osx-arm64"'
        npmConfigCache: $(npm_config_cache)

    - template: /pipelines/azure/steps/build_server.yml
      parameters:
        vstest: false
        readyToRunEnabled: true
        runtimeArg: '--runtime "win-x64,linux-x64,osx-x64,osx-arm64"'
        nugetPackages: $(NUGET_PACKAGES)

    - template: /pipelines/azure/steps/build_zip_bundle.yml
      parameters:
        runtimeArg: '--runtime "win-x64,linux-x64,osx-x64,osx-arm64"'

    - template: /pipelines/azure/steps/publish_artifacts.yml
      parameters:
        publish: 
          - key: osx-x64
            value: '/starsky/starsky-osx-x64.zip' 
          - key: generic-netcore
            value: '/starsky/starsky-generic-netcore.zip'
          - key: linux-x64
            value: '/starsky/starsky-linux-x64.zip'
          - key: win-x64
            value: '/starsky/starsky-win-x64.zip'
          - key: osx-arm64
            value: '/starsky/starsky-osx-arm64.zip'

- stage: buildelectron
  displayName: 'Build Electron'
  jobs:
  - job: build
    displayName: 'Build Electron'
    pool:
      vmImage: 'ubuntu-22.04'
    container: electronuserland/builder:18-wine
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        source: 'current'
        artifactName: 'win-x64'
        path: '$(Build.SourcesDirectory)'

    - task: DownloadPipelineArtifact@2
      inputs:
        source: 'current'
        artifactName: 'osx-x64'
        path: '$(Build.SourcesDirectory)'

    - task: DownloadPipelineArtifact@2
      inputs:
        source: 'current'
        artifactName: 'osx-arm64'
        path: '$(Build.SourcesDirectory)'

    - template: /pipelines/azure/steps/electron_build.yml

    - task: PublishPipelineArtifact@1
      displayName: 'Publish Artifact: starsky-win-x64-desktop'
      inputs:
        path: '$(Build.SourcesDirectory)/starskydesktop/dist-prod/starsky-win-x64-desktop.exe'
        ArtifactName: 'starsky-win-x64-desktop'

    - task: PublishPipelineArtifact@1
      displayName: 'Publish Artifact: starsky-mac-x64-desktop'
      inputs:
        path: '$(Build.SourcesDirectory)/starskydesktop/dist-prod/starsky-mac-x64-desktop.zip'
        ArtifactName: 'starsky-mac-x64-desktop'

    - task: PublishPipelineArtifact@1
      displayName: 'Publish Artifact: starsky-mac-arm64-desktop'
      inputs:
        path: '$(Build.SourcesDirectory)/starskydesktop/dist-prod/starsky-mac-x64-desktop.zip'
        ArtifactName: 'starsky-mac-arm64-desktop'
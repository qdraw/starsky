on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
  schedule:
    - cron: '25 0 * * *'
  workflow_dispatch:

name: Create Desktop Release on tag for .Net Core and Electron

jobs:
  build_core:
    name: Build Net Core
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.401

      - name: Build  --no-unit-test  linux-arm,linux-arm64,win-x64,osx-x64,linux-x64
        shell: bash
        working-directory: ./starsky
        run: bash build.sh --runtime "linux-arm,linux-arm64,win-x64,osx-x64,linux-x64,osx-arm64" --no-unit-test    
   
      - name: Upload linux-arm as build artifact
        uses: actions/upload-artifact@v2
        with:
          name: linux-arm
          path: ./starsky/starsky-linux-arm.zip
    
      - name: Upload linux-arm64 as build artifact
        uses: actions/upload-artifact@v2
        with:
          name: linux-arm64
          path: ./starsky/starsky-linux-arm64.zip
 
      - name: Upload win-x64 as build artifact
        uses: actions/upload-artifact@v2
        with:
          name: win-x64
          path: ./starsky/starsky-win-x64.zip
  
      - name: Upload linux-x64 as build artifact
        uses: actions/upload-artifact@v2
        with:
          name: linux-x64
          path: ./starsky/starsky-linux-x64.zip         

      - name: Upload osx-x64 as build artifact
        uses: actions/upload-artifact@v2
        with:
          name: osx-x64
          path: ./starsky/starsky-osx-x64.zip      
 
      - name: Upload osx-arm64 as build artifact
        uses: actions/upload-artifact@v2
        with:
          name: osx-arm64
          path: ./starsky/starsky-osx-arm64.zip      
 
      - name: Upload slack-notification as build artifact
        uses: actions/upload-artifact@v2
        with:
          name: starsky-tools-slack-notification
          path: ./starsky-tools/slack-notification      

  build_mac:
    name: Update Mac Desktop app
    runs-on: macos-latest
    needs: [build_core]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download osx-x64 as build artifact
        uses: actions/download-artifact@v2
        with:
          name: osx-x64
          path: ./starsky

      - name: Unzip Mac OS bundle
        shell: bash
        working-directory: ./starsky
        run: unzip starsky-osx-x64.zip -d osx-x64     
        
      - name: Restore rights pm2-restore-x-rights.sh 
        shell: bash
        working-directory: ./starsky/osx-x64
        run: chmod 777 pm2-restore-x-rights.sh 
        
      - name: run pm2-restore-x-rights.sh 
        shell: bash
        working-directory: ./starsky/osx-x64
        run: bash pm2-restore-x-rights.sh 
                
      - name: List
        shell: bash
        working-directory: ./starsky
        run: ls -lah       
        
      - name: NpmCi
        working-directory: ./starskyapp
        run: npm ci

      - name: NpmDist
        working-directory: ./starskyapp
        run: npm run mac
   
      - name: Upload starsky-mac-desktop as build artifact
        uses: actions/upload-artifact@v2
        with:
          name: starsky-mac-desktop
          path: ./starskyapp/dist-prod/starsky-mac-desktop-x64.dmg   
 
  build_win:
    name: Update Windows Desktop app
    runs-on: windows-latest
    needs: [build_core]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download starsky-win-x64 as build artifact
        uses: actions/download-artifact@v2
        with:
          name: win-x64
          path: ./starsky

      - name: Unzip Windows bundle
        shell: bash
        working-directory: ./starsky
        run: unzip starsky-win-x64.zip -d win-x64    

      - name: List
        shell: bash
        working-directory: ./starsky
        run: ls -lah           
                
      - name: NpmCi
        working-directory: ./starskyapp
        run: npm ci

      - name: NpmDist
        working-directory: ./starskyapp
        run: npm run windows
     
      - name: Upload starsky-win-desktop as build artifact
        uses: actions/upload-artifact@v2
        with:
          name: starsky-win-desktop
          path: ./starskyapp/dist-prod/starsky-win-desktop.zip   
 
  
  create_release:
    name: Create Release
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [build_core, build_mac, build_win]
    runs-on: ubuntu-latest
    steps:
       
      - name: Create parent directories
        shell: bash
        working-directory: ./
        run: mkdir -p starsky && mkdir -p starskyapp && mkdir -p starskyapp/dist     
           
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            ## Desktop app versions:
            _When you are not sure pick the Desktop App_
            - starsky-mac-desktop-x64.dmg - __Starsky Desktop App for Mac OS *10.15* or newer (Intel)__
            - starsky-win-desktop-x64.exe - __Starsky Desktop App for Windows 10 1607+ or 11 (Intel 64 bits)__

            ## Server versions:
            - starsky-linux-arm.zip - Starsky as Web Application (start from command line) only for Raspberry Pi's
            - starsky-linux-arm64.zip - Starsky as Web Application (start from command line) only for 64 bits Raspberry Pi's 
            - starsky-osx-x64.zip - Starsky as Web Application (start from command line) only for Intel Mac OS *10.15* or newer
            - starsky-osx-arm64.zip - Starsky as Web Application (start from command line) only for Apple Silicon (newer then end of 2020) Mac OS *12* or newer
            - starsky-win-x64.zip - Starsky as Web Application (start from command line) only for Windows 10 1607+ or 11 (Intel 64 bits)

            ## Changelog
            [There is an changelog to see the recent changes](https://qdraw.github.io/starsky/history.html)
          draft: true
          prerelease: false
          
      - name: Download osx-x64 as build artifact
        uses: actions/download-artifact@v2
        with:
          name: osx-x64
          path: ./starsky
           
      - name: Upload Release Asset osx-x64
        id: upload-osx-x64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./starsky/starsky-osx-x64.zip
          asset_name: starsky-osx-x64.zip
          asset_content_type: application/zip      

      - name: Download osx-arm64 as build artifact
        uses: actions/download-artifact@v2
        with:
          name: osx-arm64
          path: ./starsky
           
      - name: Upload Release Asset osx-arm64
        id: upload-osx-arm64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./starsky/starsky-osx-arm64.zip
          asset_name: starsky-osx-arm64.zip
          asset_content_type: application/zip      

      - name: Download win-x64 as build artifact
        uses: actions/download-artifact@v2
        with:
          name: win-x64
          path: ./starsky

      - name: Upload Release Asset win-x64
        id: upload-win-x64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./starsky/starsky-win-x64.zip
          asset_name: starsky-win-x64.zip
          asset_content_type: application/zip      
          
      - name: Download linux-arm64 as build artifact
        uses: actions/download-artifact@v2
        with:
          name: linux-arm64
          path: ./starsky
  
      - name: Upload Release Asset linux-arm64
        id: upload-linux-arm64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}  
          asset_path: ./starsky/starsky-linux-arm64.zip
          asset_name: starsky-linux-arm64.zip
          asset_content_type: application/zip  
 
      - name: Download linux-arm as build artifact
        uses: actions/download-artifact@v2
        with:
          name: linux-arm
          path: ./starsky
    
      - name: Upload Release Asset linux-arm
        id: upload-linux-arm
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./starsky/starsky-linux-arm.zip
          asset_name: starsky-linux-arm.zip
          asset_content_type: application/zip    
 
      - name: Download starsky-win-desktop-x64 as build artifact
        uses: actions/download-artifact@v2
        with:
          name: starsky-win-desktop-x64
          path: ./starskyapp/dist
     
      - name: Upload Release Asset starsky-win-desktop-x64
        id: upload-starsky-win-desktop-x64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}  
          asset_path: ./starskyapp/dist-prod/starsky-win-desktop-x64.exe
          asset_name: starsky-win-desktop-x64.exe
          asset_content_type: application/vnd.microsoft.portable-executable
 
      - name: Download starsky-mac-desktop-x64 as build artifact
        uses: actions/download-artifact@v2
        with:
          name: starsky-mac-desktop-x64
          path: ./starskyapp/dist
     
      - name: Upload Release Asset starsky-mac-desktop-x64
        id: upload-starsky-mac-desktop-x64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}  
          asset_path: ./starskyapp/dist-prod/starsky-mac-desktop-x64.dmg
          asset_name: starsky-mac-desktop-x64.dmg
          asset_content_type: application/octet-stream

      - name: Get tag name (needed for slack)
        id: get_tag_name
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Download slack-notification as build artifact
        uses: actions/download-artifact@v2
        with:
          name: starsky-tools-slack-notification
          path: ./starsky-tools-slack-notification

      - name: Run Slack Notification
        working-directory: ./starsky-tools-slack-notification
        run: ls

      - name: Run Slack Notification
        working-directory: ./starsky-tools-slack-notification
        run: node slack-notification
        env:
           SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
           SLACK_TITLE: 'Release ${{ steps.get_tag_name.outputs.VERSION }} is ready'
           SLACK_MESSAGE: 'The release is ready https://github.com/qdraw/starsky/releases/edit/${{ steps.get_tag_name.outputs.VERSION }}'

  trigger_pipe:
    runs-on: ubuntu-latest
    if: ${{ !startsWith(github.ref, 'refs/tags/v') }}
    needs: [build_core, build_mac, build_win]
    steps:
      - name: trigger end2end-ubuntu-ci.yml
        shell: bash
        env:
          NOTE_READ_THIS_NOW: "Need a github token that has more rights otherwise it will be ignored"
        run: |
          curl \
          -H"authorization: Bearer ${{ secrets.WORKFLOW_GITHUB }}" \
          -X POST \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/${{ github.repository }}/actions/workflows/end2end-ubuntu-ci.yml/dispatches \
          -d '{"ref":"master"}' -v

name: Starsky SonarQube ClientApp NetCore Analyze PR

on:
  pull_request:
    types: 
      - synchronize
      - opened
    branches:
      - master
    paths:
    - 'starsky/**'
    - '.github/workflows/**'
    - '!starsky/Dockerfile'
    - '!starsky/docker_demo_setup.sh'    
    - '!history.md'

env:
  PR_NUMBER_GITHUB: ${{ github.event.pull_request.number }}
  
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: 'Checkout repository on branch: ${{ github.REF }}'
        uses: actions/checkout@v2
        with:
          ref: ${{ github.HEAD_REF }}

      - name: Retrieve entire repository history
        run: |
          git fetch --prune --unshallow

      - name: Setup .NET Core 3.1
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.201
        
      - name: Use Java 11   
        uses: actions/setup-java@v1
        with:
          distribution: 'zulu'
          java-version: '11'
          check-latest: true
          java-package: jdk # (jre, jdk, or jdk+fx) - defaults to jdk
          architecture: x64 # (x64 or x86) - defaults to x64

      - name: Cache node modules clientapp (*nix)
        uses: actions/cache@v2
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-clientapp-${{ hashFiles('./starsky/starsky/clientapp/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-clientapp-

      - name: Cache nuget packages (*nix)
        uses: actions/cache@v2
        with:
          # nuget cache files are stored in `~/.nuget/packages` on Linux/macOS
          path: ~/.nuget/packages
          key: ${{ runner.os }}-build-netcore-${{ hashFiles('./starsky/starsky/nuget-packages-list.json') }}
          restore-keys: |
            ${{ runner.os }}-build-netcore-

      - name: Cache sonarqube packages (*nix)
        uses: actions/cache@v2
        with:
          # nuget cache files are stored in `~/.sonar` on Linux/macOS
          path: ~/.sonar
          key: ${{ runner.os }}-build-sonarqube
          restore-keys: |
            ${{ runner.os }}-build-sonarqube-

      - name: Build
        shell: bash
        env:
          STARSKY_SONAR_KEY: ${{ secrets.STARSKY_SONAR_KEY }}
          STARSKY_SONAR_LOGIN: ${{ secrets.STARSKY_SONAR_LOGIN }}
          STARSKY_SONAR_ORGANISATION: ${{ secrets.STARSKY_SONAR_ORGANISATION }}
          STARSKY_SONAR_URL:  ${{ secrets.STARSKY_SONAR_URL }}
        working-directory: ./starsky
        run: bash build.sh     

      - uses: actions/upload-artifact@v2
        with:
          name: starsky-generic-netcore
          path: ./starsky/starsky-generic-netcore.zip

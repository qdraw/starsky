name: Global npm resolve conflicting files fix

on:
  workflow_dispatch:

jobs:
  resolve-conflicts:
    if: github.ref != 'refs/heads/master'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Define projects
        id: define-projects
        run: echo "projects=starskydesktop documentation" >> $GITHUB_ENV
        
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup git
        run: |
          git config --global user.email "qdraw@users.noreply.github.com"
          git config --global user.name "Global npm resolve conflicting files fix script"
          
      - name: Backup package.json files
        run: |
          for project in ${{ env.projects }}; do
            cp $project/package.json /tmp/$project-package.json
          done
          
      - name: Merge master into branch
        run: |
          git fetch origin
          git checkout ${{ github.head_ref }}
          git merge origin/master -X theirs --allow-unrelated-histories

      - name: Restore package.json files
        run: |
          for project in ${{ env.projects }}; do
            cp /tmp/$project-package.json $project/package.json
          done

      - name: Check for changes in package.json
        run: |
          for project in ${{ env.projects }}; do
            if ! git diff --exit-code $project/package.json > /dev/null; then
              echo "Changes detected in $project/package.json"
              git add $project/package.json
              
              pushd ${{ env.projects }}
                npm install
              popd
              
              git add $project/package-lock.json

            else
              echo "No changes detected in $project/package.json"
            fi
          done
          git diff-index --quiet HEAD || git commit -m "Check in package.json changes"

      - name: Push changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git push origin HEAD:$(echo $GITHUB_REF | sed 's/refs\/heads\///')

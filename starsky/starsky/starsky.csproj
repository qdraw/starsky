<Project Sdk="Microsoft.NET.Sdk.Web">
    <PropertyGroup>
        <TargetFramework>net6.0</TargetFramework>
        <RuntimeFrameworkVersion>6.0.6</RuntimeFrameworkVersion>
        <Description>An attempt to create a database driven photo library</Description>
        <!-- use node script to update version -->
        <Version>0.5.0-beta.7</Version>
        <!-- SonarQube needs this -->
        <ProjectGuid>{894dce96-b51a-4ea2-80bf-e330bf1e8198}</ProjectGuid>
        <DefineConstants>SYSTEM_TEXT_ENABLED</DefineConstants>
        <!-- DebugType https://stackoverflow.com/questions/46902377/what-is-the-difference-between-using-debugtypefull-debugtype-and-debugtype -->
        <DebugType>Full</DebugType>
        <!-- due missing support of ts4.1-->
        <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
        <SynchReleaseVersion>false</SynchReleaseVersion>
        <!--   < Condition=" '$(TargetFramework)' == 'net5.0' ">3.1.22</ >-->
    </PropertyGroup>

    <PropertyGroup>
        <!-- https://developercommunity.visualstudio.com/t/launchsettingsjson-is-created-every-tim/648360#T-ND652195-->
        <NoDefaultLaunchSettingsFile>true</NoDefaultLaunchSettingsFile>
    </PropertyGroup>
    <ItemGroup>
        <None Remove="Properties\.gitkeep" />
    </ItemGroup>
    
    <ItemGroup Condition="!Exists('Properties/launchSettings.json')">
        <ContentWithTargetPath Include="Properties/default-init-launchSettings.json" TargetPath="../../../Properties/launchSettings%(Extension)" CopyToOutputDirectory="PreserveNewest" />
    </ItemGroup>

    <PropertyGroup>
        <!-- For RazorLight -->
        <!-- https://docs.microsoft.com/en-us/dotnet/core/compatibility/aspnet-core/6.0/preservecompilationcontext-not-set-by-default -->
        <PreserveCompilationContext>true</PreserveCompilationContext>
    </PropertyGroup>

    <PropertyGroup>
        <!-- https://www.ttmind.com/techpost/how-to-reduce-the-size-of-published-files-of-aspnet-core-pro-->
        <!--disable Quick JIT is enabled and creates fully optimized code -->
        <TieredCompilationQuickJit>false</TieredCompilationQuickJit>
        <!--disable TC completely, use this MSBuild property-->
        <TieredCompilation>false</TieredCompilation>
    </PropertyGroup>
    
    <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
        <WarningLevel>0</WarningLevel>
    </PropertyGroup>
    <ItemGroup>
        <PackageReference Include="Microsoft.AspNetCore.Mvc.NewtonsoftJson" Version="6.0.6" />
        <PackageReference Include="SQLitePCLRaw.lib.e_sqlite3.linux" Version="1.1.14" />
        <PackageReference Include="Swashbuckle.AspNetCore" Version="6.3.1" />
    </ItemGroup>
    <!-- generate xml file for swagger -->
    <PropertyGroup>
        <GenerateDocumentationFile>true</GenerateDocumentationFile>
        <NoWarn>$(NoWarn);1591</NoWarn>
    </PropertyGroup>
    <ItemGroup>
        <Content Include="pm2-new-instance.sh">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
        <Content Include="pm2-deploy-on-env.sh">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
        <Content Include="pm2-warmup.sh">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
        <Content Include="pm2-restore-x-rights.sh">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
        <Content Remove="clientapp\coverage\**" />
        <None Remove="pm2-install-latest-release.sh" />
        <Content Include="pm2-install-latest-release.sh">
          <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
        <None Remove="pm2-warmup.ps1" />
        <Content Include="pm2-warmup.ps1">
          <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
        <None Remove="pm2-download-azure-devops.sh" />
        <Content Include="pm2-download-azure-devops.sh">
          <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
        <None Remove="docker-cleanup.sh" />
        <Content Include="docker-cleanup.sh">
          <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
        <None Remove="github-artifacts-download.sh" />
        <Content Include="github-artifacts-download.sh">
          <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
    </ItemGroup>
    <ItemGroup>
        <Content Update="appsettings.json">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
    </ItemGroup>
    <PropertyGroup>
        <!-- starsky.feature.webhtmlpublish https://github.com/toddams/RazorLight/issues/258  -->
        <PreserveCompilationReferences>true</PreserveCompilationReferences>
    </PropertyGroup>
    <ItemGroup>
        <ProjectReference Include="..\starsky.feature.export\starsky.feature.export.csproj" />
        <ProjectReference Include="..\starsky.feature.geolookup\starsky.feature.geolookup.csproj" />
        <ProjectReference Include="..\starsky.feature.health\starsky.feature.health.csproj" />
        <ProjectReference Include="..\starsky.feature.metaupdate\starsky.feature.metaupdate.csproj" />
        <ProjectReference Include="..\starsky.feature.packagetelemetry\starsky.feature.packagetelemetry.csproj" />
        <ProjectReference Include="..\starsky.feature.realtime\starsky.feature.realtime.csproj" />
        <ProjectReference Include="..\starsky.feature.rename\starsky.feature.rename.csproj" />
        <ProjectReference Include="..\starsky.feature.webhtmlpublish\starsky.feature.webhtmlpublish.csproj" />
        <ProjectReference Include="..\starsky.foundation.accountmanagement\starsky.foundation.accountmanagement.csproj" />
        <ProjectReference Include="..\starsky.foundation.database\starsky.foundation.database.csproj" />
        <ProjectReference Include="..\starsky.foundation.http\starsky.foundation.http.csproj" />
        <ProjectReference Include="..\starsky.foundation.realtime\starsky.foundation.realtime.csproj" />
        <ProjectReference Include="..\starsky.foundation.sync\starsky.foundation.sync.csproj" />
        <ProjectReference Include="..\starsky.foundation.thumbnailmeta\starsky.foundation.thumbnailmeta.csproj" />
        <ProjectReference Include="..\starsky.foundation.worker\starsky.foundation.worker.csproj" />
        <ProjectReference Include="..\starskycore\starskycore.csproj" />
    </ItemGroup>
    <ItemGroup>
        <Content Remove="clientapp\build\*.*" />
        <Content Include="clientapp\build\*.*">
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </Content>
        <Content Remove="clientapp\build\static\*\*.*" />
        <Content Include="clientapp\build\static\*\*.*">
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </Content>
    </ItemGroup>
    <ItemGroup>
        <Compile Remove="clientapp\node_modules\**" />
        <Compile Remove="clientapp\coverage\**" />
    </ItemGroup>
    <ItemGroup>
        <EmbeddedResource Remove="clientapp\node_modules\**" />
        <EmbeddedResource Remove="clientapp\coverage\**" />
    </ItemGroup>
    <ItemGroup>
        <Content Remove="clientapp\node_modules\**" />
    </ItemGroup>
    <ItemGroup>
        <None Remove="clientapp\node_modules\**" />
        <None Remove="clientapp\coverage\**" />
    </ItemGroup>
    <ItemGroup>
      <_ContentIncludedByDefault Remove="Views\Account\ChangePassword.cshtml" />
      <_ContentIncludedByDefault Remove="Views\Account\ConfirmEmail.cshtml" />
      <_ContentIncludedByDefault Remove="Views\Account\Register.cshtml" />
      <_ContentIncludedByDefault Remove="Views\Account\ResetPasswordConfirmation.cshtml" />
      <_ContentIncludedByDefault Remove="Views\Account\SignedOut.cshtml" />
      <_ContentIncludedByDefault Remove="Views\Account\_StatusMessage.cshtml" />
      <_ContentIncludedByDefault Remove="Views\_ViewImports.cshtml" />
    </ItemGroup>
    <PropertyGroup>
        <SourceRevisionId>build$([System.DateTime]::UtcNow.ToString("yyyyMMddHHmmss"))</SourceRevisionId>
    </PropertyGroup>

    <!--    for azure creates the folders after build-->
    <Target Name="MakeMyDir" AfterTargets="Publish">
        <MakeDir Directories="$(OutDir)thumbnailTempFolder" />
        <WriteLinesToFile File="$(OutDir)thumbnailTempFolder\.gitkeep" Lines="keep this directory" Overwrite="False" />
        <MakeDir Directories="$(OutDir)storageFolder" />
        <WriteLinesToFile File="$(OutDir)storageFolder\.gitkeep" Lines="keep this directory" Overwrite="False" />
        <MakeDir Directories="$(OutDir)temp" />
        <WriteLinesToFile File="$(OutDir)temp\.gitkeep" Lines="keep this directory" Overwrite="False" />
    </Target>

    <PropertyGroup Condition=" '$(noSonar)' == 'true' ">
        <SonarQubeExclude>true</SonarQubeExclude>
    </PropertyGroup>
</Project>

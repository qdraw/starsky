<Project Sdk="Microsoft.NET.Sdk.Web">
    <PropertyGroup>
        <TargetFramework>net8.0</TargetFramework>
        <RuntimeFrameworkVersion>8.0.14</RuntimeFrameworkVersion>
        <Description>An attempt to create a database driven photo library</Description>
        <!-- use node script to update version -->
        <Version>0.6.6</Version>
        <!-- SonarQube needs this -->
        <ProjectGuid>{894dce96-b51a-4ea2-80bf-e330bf1e8198}</ProjectGuid>
        <DefineConstants>SYSTEM_TEXT_ENABLED</DefineConstants>
        <!-- DebugType https://stackoverflow.com/questions/46902377/what-is-the-difference-between-using-debugtypefull-debugtype-and-debugtype -->
        <DebugType>Full</DebugType>
        <!-- due missing support of ts4.1-->
        <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
        <SynchReleaseVersion>false</SynchReleaseVersion>
        <!-- maybe needed for mac os https://www.kenmuse.com/blog/notarizing-dotnet-console-apps-for-macos/ -->
        <IncludeNativeLibrariesForSelfExtract>true</IncludeNativeLibrariesForSelfExtract>
        <IncludeSymbolsInSingleFile>false</IncludeSymbolsInSingleFile>
        <EnableCompressionInSingleFile>false</EnableCompressionInSingleFile>
        <UseAppHost>true</UseAppHost>
        <PublishReadyToRun>false</PublishReadyToRun>
        <!--   < Condition=" '$(TargetFramework)' == 'net5.0' ">3.1.22</ >-->
        <Nullable>enable</Nullable>
        <RootNamespace>starsky</RootNamespace>
        <ImplicitUsings>disable</ImplicitUsings>
    </PropertyGroup>

    <PropertyGroup>
        <!-- https://developercommunity.visualstudio.com/t/launchsettingsjson-is-created-every-tim/648360#T-ND652195-->
        <NoDefaultLaunchSettingsFile>true</NoDefaultLaunchSettingsFile>
    </PropertyGroup>
    <ItemGroup>
        <None Remove="Properties\.gitkeep"/>
        <None Remove="generic-site\**"/>
        <None Update="mac-self-codesign.sh">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </None>
    </ItemGroup>

    <ItemGroup Condition="!Exists('Properties/launchSettings.json')">
        <ContentWithTargetPath Include="Properties/default-init-launchSettings.json" TargetPath="../../../Properties/launchSettings%(Extension)" CopyToOutputDirectory="PreserveNewest"/>
    </ItemGroup>

    <PropertyGroup>
        <!-- For RazorLight -->
        <!-- https://docs.microsoft.com/en-us/dotnet/core/compatibility/aspnet-core/6.0/preservecompilationcontext-not-set-by-default -->
        <PreserveCompilationContext>true</PreserveCompilationContext>
    </PropertyGroup>

    <PropertyGroup>
        <!-- http://web.archive.org/web/20230603181158/https://www.ttmind.com/TechPost/how-to-reduce-the-size-of-published-files-of-aspnet-core-pro-->
        <!--disable Quick JIT is enabled and creates fully optimized code -->
        <TieredCompilationQuickJit>false</TieredCompilationQuickJit>
        <!--disable TC completely, use this MSBuild property-->
        <TieredCompilation>false</TieredCompilation>
    </PropertyGroup>

    <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
        <WarningLevel>0</WarningLevel>
    </PropertyGroup>
    <ItemGroup>
        <PackageReference Include="Microsoft.AspNetCore.Mvc.NewtonsoftJson" Version="9.0.3" />
        <PackageReference Include="Microsoft.Extensions.Hosting.WindowsServices" Version="8.0.1" />
        <PackageReference Include="Swashbuckle.AspNetCore" Version="8.1.0" />
    </ItemGroup>
    <!-- generate xml file for swagger -->
    <PropertyGroup>
        <GenerateDocumentationFile>true</GenerateDocumentationFile>
        <NoWarn>$(NoWarn);1591</NoWarn>
    </PropertyGroup>
    <ItemGroup>
        <Content Include="pm2-new-instance.sh">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
        <Content Include="pm2-deploy-on-env.sh">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
        <Content Include="pm2-warmup.sh">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
        <Content Include="pm2-restore-x-rights.sh">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
        <None Remove="pm2-install-latest-release.sh"/>
        <Content Include="pm2-install-latest-release.sh">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
        <None Remove="pm2-warmup.ps1"/>
        <Content Include="pm2-warmup.ps1">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
        <None Remove="pm2-download-azure-devops.sh"/>
        <Content Include="pm2-download-azure-devops.sh">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
        <None Remove="cleanup-build-tools.sh"/>
        <Content Include="cleanup-build-tools.sh">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
        <None Remove="github-artifacts-download.sh"/>
        <Content Include="github-artifacts-download.sh">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
        <None Remove="service-cron-restart.sh"/>
        <Content Include="service-cron-restart.sh">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
        <None Remove="service-deploy-systemd.sh"/>
        <Content Include="service-deploy-launchctl-mac-os.sh">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
        <Content Include="service-deploy-systemd.sh">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
        <None Remove="service-deploy-windows.ps1"/>
        <Content Include="service-deploy-windows.ps1">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
        <Content Update="appsettings.default.json">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
        <Content Remove="generic-site\**"/>
        <Content Update="wwwroot\baseline-searcher-detective-263238__192px.png">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
        <Content Update="wwwroot\baseline-searcher-detective-263238__512px.png">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
        <Content Update="wwwroot\favicon.ico">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
        <Content Update="wwwroot\manifest.json">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
    </ItemGroup>
    <ItemGroup>
        <Content Update="appsettings.json">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
    </ItemGroup>
    <PropertyGroup>
        <!-- starsky.feature.webhtmlpublish https://github.com/toddams/RazorLight/issues/258  -->
        <PreserveCompilationReferences>true</PreserveCompilationReferences>
    </PropertyGroup>
    <ItemGroup>
        <ProjectReference Include="..\starsky.feature.demo\starsky.feature.demo.csproj"/>
        <ProjectReference Include="..\starsky.feature.desktop\starsky.feature.desktop.csproj"/>
        <ProjectReference Include="..\starsky.feature.export\starsky.feature.export.csproj"/>
        <ProjectReference Include="..\starsky.feature.geolookup\starsky.feature.geolookup.csproj"/>
        <ProjectReference Include="..\starsky.feature.health\starsky.feature.health.csproj"/>
        <ProjectReference Include="..\starsky.feature.import\starsky.feature.import.csproj"/>
        <ProjectReference Include="..\starsky.feature.metaupdate\starsky.feature.metaupdate.csproj"/>
        <ProjectReference Include="..\starsky.feature.packagetelemetry\starsky.feature.packagetelemetry.csproj"/>
        <ProjectReference Include="..\starsky.feature.realtime\starsky.feature.realtime.csproj"/>
        <ProjectReference Include="..\starsky.feature.rename\starsky.feature.rename.csproj"/>
        <ProjectReference Include="..\starsky.feature.search\starsky.feature.search.csproj"/>
        <ProjectReference Include="..\starsky.feature.settings\starsky.feature.settings.csproj"/>
        <ProjectReference Include="..\starsky.feature.syncbackground\starsky.feature.syncbackground.csproj"/>
        <ProjectReference Include="..\starsky.feature.thumbnail\starsky.feature.thumbnail.csproj"/>
        <ProjectReference Include="..\starsky.feature.trash\starsky.feature.trash.csproj"/>
        <ProjectReference Include="..\starsky.feature.webhtmlpublish\starsky.feature.webhtmlpublish.csproj"/>
        <ProjectReference Include="..\starsky.foundation.accountmanagement\starsky.foundation.accountmanagement.csproj"/>
        <ProjectReference Include="..\starsky.foundation.database\starsky.foundation.database.csproj"/>
        <ProjectReference Include="..\starsky.foundation.http\starsky.foundation.http.csproj"/>
        <ProjectReference Include="..\starsky.foundation.native\starsky.foundation.native.csproj"/>
        <ProjectReference Include="..\starsky.foundation.realtime\starsky.foundation.realtime.csproj"/>
        <ProjectReference Include="..\starsky.foundation.sync\starsky.foundation.sync.csproj"/>
        <ProjectReference Include="..\starsky.foundation.thumbnailmeta\starsky.foundation.thumbnailmeta.csproj"/>
        <ProjectReference Include="..\starsky.foundation.worker\starsky.foundation.worker.csproj"/>
        <ProjectReference Include="..\starsky.project.web\starsky.project.web.csproj"/>
    </ItemGroup>
    <ItemGroup>
        <Content Remove="clientapp\build\*.*"/>
        <Content Include="clientapp\build\*.*">
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </Content>
        <Content Remove="clientapp\build\assets\*.*"/>
        <Content Include="clientapp\build\assets\*.*">
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </Content>
    </ItemGroup>
    <ItemGroup>
        <Compile Remove="clientapp\node_modules\**"/>
        <Compile Remove="clientapp\coverage\**"/>
        <Compile Remove="generic-site\**"/>
    </ItemGroup>
    <ItemGroup>
        <EmbeddedResource Remove="clientapp\node_modules\**"/>
        <EmbeddedResource Remove="clientapp\coverage\**"/>
        <EmbeddedResource Remove="generic-site\**"/>
    </ItemGroup>
    <ItemGroup>
        <Content Remove="clientapp\node_modules\**"/>
    </ItemGroup>
    <ItemGroup>
        <None Remove="clientapp\node_modules\**"/>
        <None Remove="clientapp\coverage\**"/>
    </ItemGroup>
    <ItemGroup>
        <_ContentIncludedByDefault Remove="generic-site\appsettings.base.json"/>
        <_ContentIncludedByDefault Remove="generic-site\appsettings.Development.json"/>
    </ItemGroup>
    <PropertyGroup>
        <SourceRevisionId>build$([System.DateTime]::UtcNow.ToString("yyyyMMddHHmmss"))</SourceRevisionId>
    </PropertyGroup>

    <!--    for azure creates the folders after build-->
    <Target Name="MakeMyDir" AfterTargets="Publish">
        <MakeDir Directories="$(OutDir)thumbnailTempFolder"/>
        <WriteLinesToFile File="$(OutDir)thumbnailTempFolder\.gitkeep" Lines="keep this directory" Overwrite="False"/>
        <MakeDir Directories="$(OutDir)storageFolder"/>
        <WriteLinesToFile File="$(OutDir)storageFolder\.gitkeep" Lines="keep this directory" Overwrite="False"/>
        <MakeDir Directories="$(OutDir)temp"/>
        <WriteLinesToFile File="$(OutDir)temp\.gitkeep" Lines="keep this directory" Overwrite="False"/>
    </Target>

    <PropertyGroup Condition=" '$(noSonar)' == 'true' ">
        <SonarQubeExclude>true</SonarQubeExclude>
    </PropertyGroup>

    <!-- remove cultures (https://stackoverflow.com/a/34362524)-->

    <Target Name="AfterPackage" AfterTargets="CopyAllFilesToSingleFolderForPackage"/>

    <ItemGroup>
        <ThisAppExcludedCultures Include="cs;da;de;es;fa;fi;fr;it;ko;mk;nl;pl;pt;ru;sv;tr;zh-CN;pt-BR;ja;zh-Hans;zh-Hant">
            <InProject>false</InProject>
        </ThisAppExcludedCultures>
    </ItemGroup>

    <Target Name="RemoveTranslationsAfterBuild" AfterTargets="AfterBuild">
        <RemoveDir Directories="@(ThisAppExcludedCultures->'$(OutputPath)%(Filename)')"/>
    </Target>

    <Target Name="RemoveTranslationsAfterPackage" AfterTargets="AfterPackage">
        <RemoveDir Directories="@(ThisAppExcludedCultures->'$(_PackageTempDir)\$(OutputPath)%(Filename)')"/>
    </Target>

    <!-- end remove cultures -->

</Project>

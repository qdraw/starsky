@using starsky.ViewModels
@model ObjectItem

@{
    ViewData["Title"] = @Model.FileIndexItem.FileName;
}
@*<h2>@ViewData["Title"]</h2>*@

<h2>
    @foreach (var item in Model.Breadcrumb)
    {
        var name = @item.Split("/")[item.Split("/").Length - 1];
        if (name == "")
        {
            name = "Home";
        }
        <a asp-controller="Home" asp-action="Index" asp-route-f="@item">@name</a>
        <span> &raquo;</span>
    }
    @Model.FileIndexItem.FileName
</h2>


<h3>@Model.FileIndexItem.Tags &nbsp;</h3>

<div class="wrapper">
    <form asp-controller="Api" asp-action="Update" method="post" class="form-inline form-wrapper" id="js-tag-update">
        <input name="f" value="@Model.FileIndexItem.FilePath" hidden />
        <input class="form-control t" name="t" value="" autocomplete="off"  disabled="true"/>
        <button class="btn btn-default" type="submit" style="display: none;">Update</button>
    </form>
</div>

<script type="text/javascript">
    function loadJSON(path, success, error)
    {
        var xhr = new XMLHttpRequest();
        xhr.onreadystatechange = function()
        {
            if (xhr.readyState === XMLHttpRequest.DONE) {
                if (xhr.status === 200 || xhr.status === 205) {
                    if (success)
                        success(JSON.parse(xhr.responseText));
                } else {
                    if (error)
                        error(xhr);
                }
            }
        };
        xhr.open("GET", path, true);
        xhr.send();
    }

    function updateElement(data) {
        document.querySelector("#js-tag-update button").style.display = "inline-block";
        document.querySelector('#js-tag-update .t').value = data.tags;
        document.querySelector('#js-tag-update .t').disabled = false;
    }
    var url = "@Url.Action("Info", "Api", new { f = @Model.FileIndexItem.FilePath, t = "1" })";
    url = url.replace("&amp;", "&");
    loadJSON(url,
        function(data) { updateElement(data); },
        function(xhr) { console.error(xhr); }
    );

</script>
<h4>
    &nbsp;
    @if (@Model.RelativeObjects.PrevFilePath != null)
    {
        <a asp-controller="Home" asp-action="Index" asp-route-f="@Model.RelativeObjects.PrevFilePath">Prev</a>
    }
    @if (@Model.RelativeObjects.NextFilePath != null)
    {
        <a class="next" asp-controller="Home" asp-action="Index" asp-route-f="@Model.RelativeObjects.NextFilePath">Next</a>
    }

</h4>

<img class="main-image" src="@Url.Action("Thumbnail", "Api", new { f = @Model.FileIndexItem.FileHash, issingleitem = true })" />

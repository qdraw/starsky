@using System.Globalization
@using System.Linq
@using System.Web
@using Microsoft.AspNetCore.Mvc
@using starsky.Helpers
@using starsky.Services
@using starsky.ViewModels
@using starskycore.Helpers
@using starskycore.Models
@model DetailView

@{
    ViewData["Title"] = @Model.FileIndexItem.FileName;
}


<div class="sidebar">
	<div class="close">Bewerken</div>
	<div class="content">

		<h4 class="nextprev">
			&nbsp;
			@if (@Model.RelativeObjects.PrevFilePath != null)
			{
				var urlPath = @Url.Action("Index", "Home", new { f = @Model.RelativeObjects.PrevFilePath });
				urlPath = urlPath.Replace("%2F", "/");
				<a class="prev" href="@urlPath">Vorige</a>
			}
			@if (@Model.RelativeObjects.NextFilePath != null)
			{
				var urlPath = @Url.Action("Index", "Home", new { f = @Model.RelativeObjects.NextFilePath });
				urlPath = urlPath.Replace("%2F", "/");
				<a class="next" href="@urlPath">Volgende</a>
			}
		</h4>

		<div class="thumbnail">
			<img src="@Url.Action("Thumbnail", "Api", new {f = @Model.FileIndexItem.FileHash + ".jpg", issingleitem = true})" />
		</div>

		<div class="form-inline form-wrapper" id="js-keywords-update">
			<p>Tags: <em>(komma gescheiden)</em></p>
			<div class="form-control js-keywords contenteditable disabled js-focusout js-allow-auto-copy" contenteditable="false"
				 name="keywords" data-previouscontent="@Model.FileIndexItem.Tags">@Model.FileIndexItem.Tags</div> @*onfocusout="updateKeywords()"*@
				<a class="btn btn-default" type="submit">Update</a>
			</div>

			<div class="form-inline form-wrapper" id="js-captionabstract-update">
				<p>Info:</p>
				@*onfocusout="updateCaptionAbstract()"*@
				<div class="form-control js-captionabstract contenteditable disabled js-focusout js-allow-auto-copy" contenteditable="false"
					 name="keywords" data-previouscontent="@Model.FileIndexItem.Description">@Model.FileIndexItem.Description</div>
					<a class="btn btn-default disabled" type="submit">Update</a> @*onClick="updateCaptionAbstract()"*@
				</div>

				<div>
					@{
						var cultureInfo = new CultureInfo("nl-NL");
						if (Model.FileIndexItem.DateTime.Year >= 2)
						{
							<p>Datum: <em>@Model.FileIndexItem.DateTime.ToString(cultureInfo)</em></p>
						}
						
						if (Model.FileIndexItem.Make != string.Empty && Model.FileIndexItem.Model != string.Empty && Model.FileIndexItem.IsoSpeed != 0 && Model.FileIndexItem.ShutterSpeed != string.Empty && Math.Abs(Model.FileIndexItem.Aperture) > 0)
						{
							<p>
								Camera: <em>@Model.FileIndexItem.Make  @Model.FileIndexItem.Model</em> - <br/>
								Sluitertijd: <em>@Model.FileIndexItem.ShutterSpeed.ToString(cultureInfo) sec </em>- <br/>
								Diafragma: <em>@Model.FileIndexItem.Aperture.ToString(cultureInfo)</em> -
								ISO: <em>@Model.FileIndexItem.IsoSpeed.ToString(cultureInfo)</em>
							</p>
						}
					}
				</div>
				<div class="add-colorclass">
					@{
						foreach (var item in @FileIndexItem.GetAllColorUserInterface())
						{
							var enumValue = (int)item;
							if ((int)@Model.FileIndexItem.ColorClass == enumValue)
							{
								<a class="colorclass-@enumValue on" data-colorclass="@enumValue">
									<span class='checkbox'></span>@item.ToString()
								</a>
							}
							else
							{
								<a class="colorclass-@enumValue" data-colorclass="@enumValue">
									<span class='checkbox'></span>@item.ToString()
								</a>
							}
						}
					}
				</div>
				<div class="form-inline form-wrapper" id="js-objectname-update">
					<p>Titel:</p>
					<div class="form-control js-objectname contenteditable disabled js-focusout js-allow-auto-copy" contenteditable="false"
						 name="keywords" data-previouscontent="@Model.FileIndexItem.Title">@Model.FileIndexItem.Title</div>
						<a class="btn btn-default disabled" type="submit">Update</a>
					</div>

					<div class="addDeleteTag direct disabled">
						<h4>Danger zone:</h4>
						<a class="btn-sm btn btn-danger delete">Verwijderen niet beschikbaar</a>  @*onClick="addDeleteTag()"*@
						<a asp-controller="Search" asp-action="Trash" asp-fragment="sidebar=" class="btn-sm btn btn-info">Bekijk prullenmand</a>
						<a class="btn-sm btn btn-danger status204button hide">Reset Thumbnail</a> @*onclick="retry204()"*@
					</div>

					<div class="download-sidebar">
						<h4>Downloads:</h4>

						@if (@Files.IsExtensionThumbnailSupported(@Model.FileIndexItem.FileName))
						{
							<a class="btn-sm btn btn-secondary"
							   href="@Url.Action("DownloadPhoto", "Api", new {f = @Model.FileIndexItem.FilePath, isThumbnail = true})"
							   download="@Model.FileIndexItem.FileName.Replace(".jpg", "")-th.jpg">
								Klein
							</a>
						}

						<a class="btn-sm btn btn-secondary"
						   href="@Url.Action("DownloadPhoto", "Api", new {f = @Model.FileIndexItem.FilePath, isThumbnail = false})"
						   download="@Model.FileIndexItem.FileName">
							Orgineel
						</a>
					</div>
					<div class="location-sidebar">
						<h4>Locatie:</h4>
						@if (Math.Abs(@Model.FileIndexItem.Latitude) > 0.001
							 && Math.Abs(@Model.FileIndexItem.Longitude) > 0.001
							 && !string.IsNullOrEmpty(@Model.FileIndexItem.LocationCity)
							 && !string.IsNullOrEmpty(@Model.FileIndexItem.LocationState)
							 && !string.IsNullOrEmpty(@Model.FileIndexItem.LocationState))
						{
							<a target="_blank"
							   href="https://www.openstreetmap.org/?mlat=@Model.FileIndexItem.Latitude&mlon=@Model.FileIndexItem.Longitude#map=15/@Model.FileIndexItem.Latitude/@Model.FileIndexItem.Longitude">
								@Model.FileIndexItem.LocationCity, @Model.FileIndexItem.LocationState (@Model.FileIndexItem.LocationCountry)
							</a><br />
							<em>Opent in nieuw tabblad</em>
						}
						else if (Math.Abs(@Model.FileIndexItem.Latitude) > 0.001
								  && Math.Abs(@Model.FileIndexItem.Longitude) > 0.001)
						{
							<a target="_blank"
							   href="https://www.openstreetmap.org/?mlat=@Model.FileIndexItem.Latitude&mlon=@Model.FileIndexItem.Longitude#map=15/@Model.FileIndexItem.Latitude/@Model.FileIndexItem.Longitude">
								@Math.Round(@Model.FileIndexItem.Latitude, 5),@Math.Round(@Model.FileIndexItem.Longitude, 5)
							</a><br />
							<em>Opent in nieuw tabblad</em>
						}
						else
						{
							<text>Geen locatie bekend</text>
						}
					</div>
					<div>
						<div class="js-collectionsswitch">
							<h4>Collecties:</h4>
							<div><a class="btn btn-default small" href="#">@Model.FileIndexItem.ImageFormat</a></div>
						</div>

					</div>
					<div class="rotation-sidebar">
						<h4>Rotatie:</h4>
						<a class="btn-sm btn btn-secondary js-left">
							[
						</a>
						<a class="btn-sm btn btn-secondary js-right">
							]
						</a>
					</div>

					<div class="form-inline form-wrapper" id="js-filename-update">
						<p>Filename:</p>
						<div class="form-control js-filename contenteditable disabled" contenteditable="false"
							 name="keywords" data-previouscontent="@Model.FileIndexItem.FilePath">@Model.FileIndexItem.FilePath</div>
							@*onfocusout="updateFilename()"*@
							<a class="btn btn-default disabled" type="submit">Update</a>
							@*onClick="updateFilename()"*@
						</div>

					</div>
				</div>

<div class="detailview">
    <h4 class="nextprev">
        &nbsp;
        @if ( @Model.RelativeObjects.PrevFilePath != null )
        {
            var urlPath = @Url.Action("Index", "Home", new {f = @Model.RelativeObjects.PrevFilePath});
            urlPath = urlPath.Replace("%2F", "/");
            <a class="prev" href="@urlPath">Vorige</a>
        }

        <span class="js-filterinfo">
            @if ( @Model.ColorClassFilterList.Any() )
            {
                <text>Filters:</text>
                foreach ( var item in Model.ColorClassFilterList )
                {
                    var enumValue = ( int ) item;
                    <span class="sqbox on colorclass-@enumValue"></span>
                }

            }
        </span>

        @if ( @Model.ColorClassFilterList.Any() && !Model.ColorClassFilterList.Contains(
            @Model.FileIndexItem.ColorClass) )
        {
            <span>&nbsp;&nbsp;Deze file is buiten de ColorClass selectie</span>
        }

        @if ( @Model.FileIndexItem.Tags.Contains("!delete!") )
        {
            <span>Verwijderd bestand!</span>
        }
        @if ( @Model.RelativeObjects.NextFilePath != null )
        {
            var urlPath = @Url.Action("Index", "Home", new {f = @Model.RelativeObjects.NextFilePath});
            urlPath = urlPath.Replace("%2F", "/");
            <a class="next" href="@urlPath">Volgende</a>

        }
    </h4>

    <h1 class="breadcrumb">
        @foreach ( var item in Model.Breadcrumb )
        {
            var name = @item.Split("/")[item.Split("/").Length - 1];
            if ( name == "" )
            {
                name = "Home";
            }

            var urlPath = @Url.Action("Index", "Home", new {f = @item});
            urlPath = urlPath.Replace("%2F", "/");
            <a href="@urlPath">@name</a>

            <span> &raquo;</span>
        }
        <span>
            @Model.FileIndexItem.FileName
        </span>
    </h1>

	<div class="main-image">
		<img class="disabled-@Model.FileIndexItem.Orientation" src="@Url.Action("Thumbnail", "Api", new {f = @Model.FileIndexItem.FileHash + ".jpg", issingleitem = true})"/>
	</div>
	
	<div id="popup">
		<div class="content">
		</div>
	</div>
	
</div>


<div class="preloader">
    <img src="images/preloader.svg" alt="preloader">
</div>

@{
	// Javascript don't accept decoded slashes
	var thumbnailApiBase = Url.Action("Thumbnail", "Api", new {f = @Model.FileIndexItem.FileHash, json = true});
	thumbnailApiBase = HttpUtility.UrlDecode(thumbnailApiBase);
	var updateApiBase = Url.Action("Update", "Api", new { f = @Model.FileIndexItem.FilePath});
	updateApiBase = HttpUtility.UrlDecode(updateApiBase);
	var infoApiBase = @Url.Action("Info", "Api", new {f = @Model.FileIndexItem.FilePath});
	infoApiBase = HttpUtility.UrlDecode(infoApiBase);
	var downloadUrl = @Url.Action("DownloadPhoto", "Api", 
		new {f = @Model.FileIndexItem.FilePath, isThumbnail = false});
	downloadUrl = HttpUtility.UrlDecode(downloadUrl);
}
<div id="js-settings" data-updateApiBase="@updateApiBase" 
     data-infoApiBase="@infoApiBase" data-thumbnailApiBase="@thumbnailApiBase"
     data-subPath="@Model.SubPath" data-downloadUrl="@downloadUrl"></div>

<script type="text/javascript" src="js/loadjson.js"></script>
<script src="js/sidebar-stringhelper.js" type="text/javascript"></script>
<script src="js/sidebar.js" type="text/javascript"></script>
<script src="js/detailview.js" asp-append-version="true" type="text/javascript"></script>

@*For IE/IE-Edge "object-fit: cover" *@
<script type="text/javascript" src="~/js/vendor/ofi.min.js" defer></script>

@if (@Model.FileIndexItem.ImageFormat == Files.ImageFormat.gpx)
{
    <link rel="stylesheet" href="~/css/leaflet.css" />
	<script src="~/js/vendor/leaflet.min.js"></script>
	<script src="~/js/leaflet.modifyEmptyImageUrl.js"></script>
    <script src="~/js/vendor/leaflet-gpx.min.js"></script>
	<script src="~/js/gpx-map.js"></script>
}

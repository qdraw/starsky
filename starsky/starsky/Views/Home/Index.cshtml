@using System.Linq
@using Microsoft.AspNetCore.Mvc
@using starsky.ViewModels
@using starsky.Models
@model IndexViewModel
@{
    ViewData["Title"] = Model.SearchQuery + " Index view ";
}

<h4 class="nextprev">
    @if (@Model.RelativeObjects.PrevFilePath != null)
    {
        <a class="prev" asp-controller="Home" asp-action="Index" asp-route-f="@Model.RelativeObjects.PrevFilePath">Vorige (@Model.RelativeObjects.PrevFilePath.Split("/").LastOrDefault())</a>
    }
    @if (@Model.RelativeObjects.NextFilePath != null)
    {
        <a class="next" asp-controller="Home" asp-action="Index" asp-route-f="@Model.RelativeObjects.NextFilePath">Volgende (@Model.RelativeObjects.NextFilePath.Split("/").LastOrDefault())</a>
    }
    &nbsp;
</h4>

<h1 class="breadcrumb">
    @foreach (var item in Model.Breadcrumb)
    {
        var name = @item.Split("/")[item.Split("/").Length - 1];
        if (name == "")
        {
            name = "Home";
        }
        <a asp-controller="Home" asp-action="Index" asp-route-f="@item">@name</a>
        if (item != Model.Breadcrumb[Model.Breadcrumb.Count - 1])
        {
            <span> &raquo;</span>
        }
    }
</h1>

<div id="portfolio-filter">
</div>

<div class="wrapper" id="portfolio-data">
    @if(!Model.FileIndexItems.Any())
    {
        <h2> Er zijn geen items in deze map</h2>
    }
    
    @foreach (var item in Model.FileIndexItems)
    {
        var enumValue = (int) item.ColorClass;
        var directoryLabel = "directory-" + item.IsDirectory.ToString().ToLower();
        <a class="halfitem @item.ColorClass colorclass-@enumValue @directoryLabel" data-tag="colorclass-@enumValue"
           data-tagnl="@FileIndexItem.GetAllColorUserInterface().FirstOrDefault(p => (int) p == enumValue)"
           asp-controller="Home" asp-action="Index" asp-route-f="@item.FilePath">
            <div class="caption">
                <h2>@item.FileName</h2>
                <p>@item.Tags&nbsp;</p>
            </div>
            <div class="filter"></div>

            @if (!string.IsNullOrWhiteSpace(@item.FileHash))
            {
                <img class="lazyload" src="#" data-src="@Url.Action("Thumbnail", "Api", new {f = item.FileHash})" alt=""/>
            }
            else
            {
                <img src="#" alt=""/>
            }
        </a>
    }
</div>

<script type="text/javascript" src="js/portfolio-filter.js"></script>

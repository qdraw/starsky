using System;
using System.Collections.Generic;
using Microsoft.Extensions.DependencyInjection;

namespace starskycore.Extensions
{
	public static class ServiceProviderServiceExtensions
	{
		/// <summary>
		/// Get an enumeration of services of type <paramref name="serviceType"/> from the <see cref="IServiceProvider"/>.
		/// @see: https://github.com/aspnet/DependencyInjection/blob/release/2.1/src/DI.Abstractions/ServiceProviderServiceExtensions.cs#L98-L118
		/// </summary>
		/// <param name="provider">The <see cref="IServiceProvider"/> to retrieve the services from.</param>
		/// <param name="serviceType">An object that specifies the type of service object to get.</param>
		/// <returns>An enumeration of services of type <paramref name="serviceType"/>.</returns>
		public static IEnumerable<object> GetServices(this IServiceProvider provider, Type serviceType)
		{
			if (provider == null)
			{
				throw new ArgumentNullException(nameof(provider));
			}

			if (serviceType == null)
			{
				throw new ArgumentNullException(nameof(serviceType));
			}

			var genericEnumerable = typeof(IEnumerable<>).MakeGenericType(serviceType);
			return (IEnumerable<object>)provider.GetRequiredService(genericEnumerable);
		}
	}
}
